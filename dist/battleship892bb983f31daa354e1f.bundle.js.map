{"version":3,"file":"battleship892bb983f31daa354e1f.bundle.js","mappings":"mBACA,IAAIA,EAAsB,CAAC,ECD3BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,G,MCAxB,IAAIC,EACAP,EAAoBC,EAAEO,gBAAeD,EAAYP,EAAoBC,EAAEQ,SAAW,IACtF,IAAIC,EAAWV,EAAoBC,EAAES,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UAC5C,GAAGD,EAAQE,OAEV,IADA,IAAIC,EAAIH,EAAQE,OAAS,EAClBC,GAAK,KAAOT,IAAc,aAAaU,KAAKV,KAAaA,EAAYM,EAAQG,KAAKJ,GAE3F,CAID,IAAKL,EAAW,MAAM,IAAIW,MAAM,yDAChCX,EAAYA,EAAUY,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFnB,EAAoBoB,EAAIb,C,KClBxB,MAkCA,EAlCac,CAACC,EAAMC,KAClB,IAAIC,EAAS,EACTC,EAAgBF,EAEpB,MAAMG,EAAUA,IAAMF,IAAWD,EAiBjC,MAAO,CACLD,OACA,UAAIC,GACF,OAAOE,CACT,EACA,UAAID,GACF,OAAOA,CACT,EACAE,UACAC,IAxBUA,KAEV,IAAIC,EAAM,GAEV,OAAKF,KAME,mDAAPE,qDALEJ,GAAU,EACVC,GAAiB,EACVC,IAKC,EAaX,EC7BGG,EAAgBR,EAAK,UAAW,GAChCS,EAAmBT,EAAK,aAAc,GACtCU,EAAkBV,EAAK,YAAa,GACpCW,EAAkBX,EAAK,YAAa,GACpCY,EAAmBZ,EAAK,cAAe,GAEvCa,EAAkBb,EAAK,UAAW,GAClCc,EAAqBd,EAAK,aAAc,GACxCe,EAAoBf,EAAK,YAAa,GACtCgB,EAAoBhB,EAAK,YAAa,GACtCiB,EAAqBjB,EAAK,cAAe,GC6B/C,EA3Be,WAAuB,IAAtBC,EAAIiB,UAAAxB,OAAA,QAAAyB,IAAAD,UAAA,GAAAA,UAAA,GAAG,WACrB,MAAME,ECbUC,MAChB,MAAMD,EAAQ,GACRE,EAAO,GAWPC,EAAcA,CAACC,EAAGC,IAAMD,GAAK,GAAKA,EAAIF,GAAQG,GAAK,GAAKA,EAAIH,EA2ElE,MAAO,CACLI,YArFkBA,KAClB,IAAK,IAAI/B,EAAI,EAAGA,EAAI2B,EAAM3B,GAAK,EAAG,CAChCyB,EAAMzB,GAAK,GACX,IAAK,IAAIgC,EAAI,EAAGA,EAAIL,EAAMK,GAAK,EAC7BP,EAAMzB,GAAGgC,GAAK,OAElB,CACA,OAAOP,CAAK,EA+EZQ,UA/CgBA,CAACC,EAAMC,EAAKC,EAAKC,KACjC,MAAM,OAAE9B,GAAW2B,EAEnB,IAhCmBI,EAACvC,EAAQoC,EAAKC,EAAKC,KACtC,MAAME,EAAa,eAARF,EAAuB,EAAI,EAChCG,EAAa,aAARH,EAAqB,EAAI,EAEpC,IAAK,IAAIrC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAClC,MAAM6B,EAAIO,EAAMpC,EAAIuC,EACdT,EAAIK,EAAMnC,EAAIwC,EAEpB,IAAKZ,EAAYC,EAAGC,GAClB,OAAO,EAGT,IAAK,IAAIW,EAAOZ,EAAI,EAAGY,GAAQZ,EAAI,EAAGY,GAAQ,EAC5C,IAAK,IAAIC,EAAOZ,EAAI,EAAGY,GAAQZ,EAAI,EAAGY,GAAQ,EAC5C,GACED,GAAQ,GACRA,EAAOd,GACPe,GAAQ,GACRA,EAAOf,GACe,UAAtBF,EAAMiB,GAAMD,GAEZ,OAAO,CAIf,CACA,OAAO,CAAI,EAMNH,CAAa/B,EAAQ4B,EAAKC,EAAKC,GAClC,OAAO,EAGT,MAAME,EAAa,eAARF,EAAuB,EAAI,EAChCG,EAAa,aAARH,EAAqB,EAAI,EAEpC,IAAK,IAAIrC,EAAI,EAAGA,EAAIO,EAAQP,GAAK,EAAG,CAClC,MAAM6B,EAAIO,EAAMpC,EAAIuC,EAEpBd,EADUU,EAAMnC,EAAIwC,GACXX,GAAKK,CAChB,CAEA,OAAO,CAAI,EAgCXS,cA7BoBA,CAACR,EAAKC,KAC1B,MAAMQ,EAAOnB,EAAMU,GAAKC,GACxB,OAAa,OAATQ,GAAqC,mBAAbA,EAAKjC,IACxBiC,EAAKjC,OAGdc,EAAMU,GAAKC,GAAO,IACX,SAAQ,EAuBfS,aApBmBA,OAEhBhC,EAAcH,WACfI,EAAiBJ,WACjBK,EAAgBL,WAChBM,EAAgBN,WAChBO,EAAiBP,WAAeQ,EAAgBR,SAAUS,EAAmBT,WAAaU,EAAkBV,WAAaW,EAAkBX,WAAaY,EAAmBZ,WAe7K,SAAIe,GACF,OAAOA,CACT,EACD,EDnFaC,GAEd,IAAIoB,EAAQ,CACVC,QAAS7B,EACT8B,WAAY7B,EACZ8B,UAAW7B,EACX8B,UAAW7B,EACX8B,WAAY7B,GAgBd,MAXY,aAAThB,IACDwC,EAAQ,CACNC,QAASlC,EACTmC,WAAYlC,EACZmC,UAAWlC,EACXmC,UAAWlC,EACXmC,WAAYlC,IAKT,CAAEX,OAAMmB,QAAOqB,QAAOM,gBAtBLA,IAAM3B,EAAMM,cAuBtC,E,6SEjCerC,SAAS2D,cAAc,YAE/BzD,IAAM0D,ECKAC,MACX,MAAMC,EAAiB9D,SAAS2D,cAAc,iBACxCI,EAAmB/D,SAAS2D,cAAc,mBAC1CK,EAASC,EAAO,UAChBC,EAAWD,IACXE,EAAcH,EAAON,kBACrBU,EAAgBF,EAASR,kBACzBW,EAAa,GACbC,EAAe,GACfC,EAAS,GACf,IAAIC,GAAa,EACbC,GAAe,EACnB,MAAMC,EAAU1E,SAAS2D,cAAc,YACjCgB,EAAkB,IACnB3E,SAAS4E,iBAAiB,+BAEzBC,EAAgB,IACjB7E,SAAS4E,iBAAiB,6BAEzBE,EAAiB9E,SAAS2D,cAAc,iBACxCoB,EAAgB/E,SAAS2D,cAAc,mBACvCqB,EAAahF,SAAS2D,cAAc,gBACpCsB,EAAcjF,SAAS2D,cAAc,kBACrCuB,EAAWlF,SAAS2D,cAAc,cAClCwB,EAAgBnF,SAAS2D,cAAc,aACvCyB,EAAgBpF,SAAS2D,cAAc,aACvC0B,EAAerF,SAAS2D,cAAc,oBACtC2B,EAAetF,SAAS2D,cAAc,oBACtC4B,EAAcvF,SAAS2D,cAAc,mBACrC6B,EAAWxF,SAAS2D,cAAc,uBAClC8B,EAAkBzF,SAAS2D,cAAc,sBACzC+B,EAAY1F,SAAS2D,cAAc,eACnCgC,EAAgB3F,SAAS2D,cAAc,UACvCiC,EAAW5F,SAAS2D,cAAc,aAGxCsB,EAAY/E,IAAM2F,EAClBR,EAAanF,IAAM4F,EACnBR,EAAapF,IAAM6F,EACnBR,EAAYrF,IAAM8F,EAClBhB,EAAWiB,YAIXb,EAAcc,UAAW,EAEzBN,EAASO,iBAAiB,UAAU,KACZ,qBAAnBP,EAASQ,QACVhB,EAAcc,UAAW,GAGL,mBAAnBN,EAASQ,QACVhB,EAAcc,UAAW,EAC3B,IAGFP,EAAcQ,iBAAiB,SAAS,KACtChB,EAAciB,MAAQ,GACtBhB,EAAcgB,MAAQ,EAAE,IAG1BlB,EAASiB,iBAAiB,UAAU,KACZ,qBAAnBP,EAASQ,QACVtB,EAAeuB,YAAclB,EAAciB,MAC3CrB,EAAcsB,YAAcnC,EAAStD,KACrC8D,EAAQ2B,YAAc,GAAGlB,EAAciB,gCACzC,IAIFZ,EAASW,iBAAiB,SAAS,KACjCV,EAAgBQ,WAAW,IAS7B/B,EAASnC,MAAMQ,UAAU2B,EAASd,MAAMC,QAAS,EAAG,EAAG,cACvDa,EAASnC,MAAMQ,UAAU2B,EAASd,MAAME,WAAY,EAAG,EAAG,YAC1DY,EAASnC,MAAMQ,UAAU2B,EAASd,MAAMG,UAAW,EAAG,EAAG,YACzDW,EAASnC,MAAMQ,UAAU2B,EAASd,MAAMI,UAAW,EAAG,EAAG,cACzDU,EAASnC,MAAMQ,UAAU2B,EAASd,MAAMK,WAAY,EAAG,EAAG,YAE1D,MAAM6C,EAAWA,KACfxC,EAAeyC,UAAY,GAC3BxC,EAAiBwC,UAAY,GAC7B,IAAK,IAAIpE,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAC3B,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAC3BiC,EAAWmC,KAAKrC,EAAYhC,GAAGC,IAC/BkC,EAAakC,KAAKpC,EAAcjC,GAAGC,IACnCmC,EAAOiC,KAAK,CAACrE,EAAGC,IAIpB,IAAK,IAAI9B,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAAG,CAC/B,MAAMmG,EAAQzG,SAAS0G,cAAc,UAC/BC,EAAQ3G,SAAS0G,cAAc,UAEf,UAAlBrC,EAAW/D,KACbmG,EAAMG,UAAUC,IAAI,SACpBJ,EAAMK,MAAMC,gBAAkB,QAAQC,MAGX,iBAAlB3C,EAAW/D,KACpBmG,EAAMG,UAAUC,IAAI,SACpBJ,EAAMK,MAAMC,gBAAkB,QAAQE,MAGlB,MAAlB5C,EAAW/D,KACbmG,EAAMG,UAAUC,IAAI,SACpBJ,EAAMK,MAAMC,gBAAkB,OAAOC,MAGf,UAApB1C,EAAahE,KACfqG,EAAMC,UAAUC,IAAI,SACpBF,EAAMG,MAAMC,gBAAkB,OAAOC,MAGR,iBAApB1C,EAAahE,KACtBqG,EAAMC,UAAUC,IAAI,SACpBF,EAAMG,MAAMC,gBAAkB,OAAOC,MAGf,MAApB1C,EAAahE,KACfqG,EAAMC,UAAUC,IAAI,SACpBF,EAAMG,MAAMC,gBAAkB,OAAOC,MAGvClD,EAAeoD,OAAOT,GACtB1C,EAAiBmD,OAAOP,GACxB,IAAI7C,EAAeqD,UAAU7G,GAAG8G,aAAa,IAAK7C,EAAOjE,GAAG,IAC5D,IAAIwD,EAAeqD,UAAU7G,GAAG8G,aAAa,IAAK7C,EAAOjE,GAAG,IAC5D,IAAIyD,EAAiBoD,UAAU7G,GAAG8G,aAAa,IAAK7C,EAAOjE,GAAG,IAC9D,IAAIyD,EAAiBoD,UAAU7G,GAAG8G,aAAa,IAAK7C,EAAOjE,GAAG,GAChE,GAWI+G,EAAe,IAAIC,IAGzB,KAAOD,EAAapF,KAAO,KAAK,CAC9B,MAAMsF,EARCC,KAAKC,MAAsB,IAAhBD,KAAKE,UASvBL,EAAaR,IAAI,GAAGU,IACtB,CAGA,MAAMI,EAAYC,MAAMC,KAAKR,GAAcS,KAAKC,IAASA,IAEnDC,EAAyBrI,IAE7B,GADAA,EAAEsI,kBACEtI,EAAEuI,OAAOC,QAAQ,UAAW,CAC9B,MAAMhG,GAAKxC,EAAEuI,OAAOE,aAAa,KAC3BhG,GAAKzC,EAAEuI,OAAOE,aAAa,KAEjC,GADApE,EAAOjC,MAAMkB,cAAcd,EAAGC,GACJ,MAAtB+B,EAAYhC,GAAGC,GACjBqC,GAAe,EACf9E,EAAEuI,OAAOpB,MAAMC,gBAAkB,GACjCpH,EAAEuI,OAAOpB,MAAMC,gBAAkB,OAAOsB,KACxC1I,EAAEuI,OAAOhC,UAAW,MACf,CACL,MAAMoC,EAAWnE,EAAYhC,GAAGC,GAE1BmG,EADaC,OAAOC,OAAOzE,EAAOZ,OACfsF,QAAQJ,GAGb,YAAlBA,EAAS1H,MACS,eAAlB0H,EAAS1H,MACS,cAAlB0H,EAAS1H,MACS,cAAlB0H,EAAS1H,MACS,gBAAlB0H,EAAS1H,OAEc,IAAIiE,EAAc0D,GAAOpB,UAC9CmB,EAASzH,QAEIiG,MAAM6B,gBAAkB,OAEzClE,GAAe,EACf9E,EAAEuI,OAAOpB,MAAMC,gBAAkB,GACjCpH,EAAEuI,OAAOpB,MAAMC,gBAAkB,OAAO6B,KACxCjJ,EAAEuI,OAAOhC,UAAW,EACpB,IAAIpC,EAAeqD,UAAUQ,EAAUkB,SAASC,OAClD,CAEIrE,EACFX,EAAeqC,iBAAiB,QAAS6B,IAEzClE,EAAeiF,oBAAoB,QAASf,GAE5CjE,EAAiBoC,iBAAiB,QAAS6C,GAE/C,CACIhF,EAAOjC,MAAMoB,iBACfuB,EAAQ2B,YAAc,GAAGnC,EAAStD,aACpC,EAGIoI,EAAuBrJ,IAE3B,GADAA,EAAEsI,kBACEtI,EAAEuI,OAAOC,QAAQ,UAAW,CAC9B,MAAMhG,GAAKxC,EAAEuI,OAAOE,aAAa,KAC3BhG,GAAKzC,EAAEuI,OAAOE,aAAa,KAEjC,GADAlE,EAASnC,MAAMkB,cAAcd,EAAGC,GACJ,MAAxBgC,EAAcjC,GAAGC,GAKd,CACL,MAAMkG,EAAWlE,EAAcjC,GAAGC,GAE5BmG,EADaC,OAAOC,OAAOvE,EAASd,OACjBsF,QAAQJ,GAqBjC,MAlBoB,YAAlBA,EAAS1H,MACS,eAAlB0H,EAAS1H,MACS,cAAlB0H,EAAS1H,MACS,cAAlB0H,EAAS1H,MACS,gBAAlB0H,EAAS1H,OAEc,IAAI+D,EAAgB4D,GAAOpB,UAChDmB,EAASxH,OAAS,GAELgG,MAAM6B,gBAAkB,OAEzCnE,GAAa,EACb7E,EAAEuI,OAAOpB,MAAMC,gBAAkB,GACjCpH,EAAEuI,OAAOpB,MAAMC,gBAAkB,QAAQ6B,KACzCjJ,EAAEuI,OAAOhC,UAAW,OAChBhC,EAASnC,MAAMoB,iBACjBuB,EAAQ2B,YAAc,GAAGrC,EAAOpD,cAGpC,CA7BE4D,GAAa,EACb7E,EAAEuI,OAAOpB,MAAMC,gBAAkB,GACjCpH,EAAEuI,OAAOpB,MAAMC,gBAAkB,QAAQsB,KACzC1I,EAAEuI,OAAOhC,UAAW,EA4BlB1B,EACFT,EAAiBoC,iBAAiB,QAAS6C,IAE3CjF,EAAiBgF,oBAAoB,QAASC,GAC9ClF,EAAeqC,iBAAiB,QAAS6B,GACzC,IAAIlE,EAAeqD,UAAUQ,EAAUkB,SAASC,QAEpD,GAGFpD,EAAUS,iBAAiB,UAAU,KACnC,MAAM8C,EAAWjJ,SAAS2D,cAAc,cAClCuF,EAAWlJ,SAAS2D,cAAc,cAClCwF,EAAqBnJ,SAAS2D,cAAc,wBAC5CyF,EAAcpJ,SAAS2D,cAAc,iBACrC0F,EAAcrJ,SAAS2D,cAAc,iBACrC2F,EAAwBtJ,SAAS2D,cACrC,2BAEI4F,EAAavJ,SAAS2D,cAAc,gBACpC6F,EAAaxJ,SAAS2D,cAAc,gBACpC8F,EAAuBzJ,SAAS2D,cACpC,0BAEI+F,EAAa1J,SAAS2D,cAAc,gBACpCgG,EAAa3J,SAAS2D,cAAc,gBACpCiG,EAAuB5J,SAAS2D,cACpC,0BAEIkG,EAAU7J,SAAS2D,cAAc,aACjCmG,EAAU9J,SAAS2D,cAAc,aACjCoG,EAAoB/J,SAAS2D,cAAc,wBAQzC,IALNK,EAAOjC,MAAMQ,UACXyB,EAAOZ,MAAMC,SACZ4F,EAAS7C,MAAQ,GACjB8C,EAAS9C,MACV+C,EAAmB/C,SAOf,IALNpC,EAAOjC,MAAMQ,UACXyB,EAAOZ,MAAME,YACZ8F,EAAYhD,MAAQ,GACpBiD,EAAYjD,MACbkD,EAAsBlD,SAOlB,IALNpC,EAAOjC,MAAMQ,UACXyB,EAAOZ,MAAMG,WACZgG,EAAWnD,MAAQ,GACnBoD,EAAWpD,MACZqD,EAAqBrD,SAOjB,IALNpC,EAAOjC,MAAMQ,UACXyB,EAAOZ,MAAMI,WACZkG,EAAWtD,MAAQ,GACnBuD,EAAWvD,MACZwD,EAAqBxD,SAOjB,IALNpC,EAAOjC,MAAMQ,UACXyB,EAAOZ,MAAMK,YACZoG,EAAQzD,MAAQ,GAChB0D,EAAQ1D,MACT2D,EAAkB3D,QAGpBpC,EAAOjC,MAAMQ,UACXyB,EAAOZ,MAAMC,SACZ4F,EAAS7C,MAAQ,GACjB8C,EAAS9C,MACV+C,EAAmB/C,OAGrBpC,EAAOjC,MAAMQ,UACXyB,EAAOZ,MAAME,YACZ8F,EAAYhD,MAAQ,GACpBiD,EAAYjD,MACbkD,EAAsBlD,OAGxBpC,EAAOjC,MAAMQ,UACXyB,EAAOZ,MAAMG,WACZgG,EAAWnD,MAAQ,GACnBoD,EAAWpD,MACZqD,EAAqBrD,OAGvBpC,EAAOjC,MAAMQ,UACXyB,EAAOZ,MAAMI,WACZkG,EAAWtD,MAAQ,GACnBuD,EAAWvD,MACZwD,EAAqBxD,OAGvBpC,EAAOjC,MAAMQ,UACXyB,EAAOZ,MAAMK,YACZoG,EAAQzD,MAAQ,GAChB0D,EAAQ1D,MACT2D,EAAkB3D,OAGpBE,IACA0D,QAAQC,MAAM9F,KAId+F,MAAM,6BACNjB,EAAS7C,MAAQ,GACjB8C,EAAS9C,MAAQ,GACjB+C,EAAmB/C,MAAQ,aAC3BgD,EAAYhD,MAAQ,GACpBiD,EAAYjD,MAAQ,GACpBkD,EAAsBlD,MAAQ,GAC9BmD,EAAWnD,MAAQ,GACnBoD,EAAWpD,MAAQ,GACnBqD,EAAqBrD,MAAQ,GAC7BsD,EAAWtD,MAAQ,GACnBuD,EAAWvD,MAAQ,GACnBwD,EAAqBxD,MAAQ,GAC7ByD,EAAQzD,MAAQ,GAChB0D,EAAQ1D,MAAQ,GAChB2D,EAAkB3D,MAAQ,GAC5B,IAEFE,IACAvC,EAAiBoC,iBAAiB,QAAS6C,EAAoB,EDnXjEnF,E","sources":["webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/runtime/global","webpack://battleship/webpack/runtime/publicPath","webpack://battleship/./src/Models/Ship.mjs","webpack://battleship/./src/Models/Ships.mjs","webpack://battleship/./src/Models/Player.mjs","webpack://battleship/./src/Models/GameBoard.mjs","webpack://battleship/./src/index.js","webpack://battleship/./src/Controllers/Game.mjs"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","const Ship = (name, health) => {\n  let damage = 0;\n  let currentHealth = health;\n\n  const hasSunk = () => damage === health;\n\n  const hit = () => {\n    \n    let msg = '';\n\n    if (!hasSunk()) {\n      damage += 1;\n      currentHealth -= 1;\n      return hasSunk();\n    }\n\n    msg += 'The ship you are trying to hit has already sank.';\n\n    return msg;\n  };\n\n  return {\n    name,\n    get health() {\n      return currentHealth;\n    },\n    get damage() {\n      return damage;\n    },\n    hasSunk,\n    hit,\n  };\n};\n\nexport default Ship;\n","import Ship from './Ship.mjs';\n\nconst carrierPlayer = Ship('Carrier', 5);\nconst battleshipPlayer = Ship('Battleship', 4);\nconst destroyerPlayer = Ship('Destroyer', 3);\nconst submarinePlayer = Ship('Submarine', 3);\nconst patrolBoatPlayer = Ship('Patrol Boat', 2);\n\nconst carrierComputer = Ship('Carrier', 5);\nconst battleshipComputer = Ship('Battleship', 4);\nconst destroyerComputer = Ship('Destroyer', 3);\nconst submarineComputer = Ship('Submarine', 3);\nconst patrolBoatComputer = Ship('Patrol Boat', 2);\n\nexport {carrierPlayer, carrierComputer,battleshipPlayer,battleshipComputer,destroyerPlayer,destroyerComputer,submarinePlayer,submarineComputer,patrolBoatPlayer,patrolBoatComputer};","import GameBoard from './GameBoard.mjs';\nimport {\n  carrierPlayer,\n  carrierComputer,\n  battleshipPlayer,\n  battleshipComputer,\n  destroyerPlayer,\n  destroyerComputer,\n  submarinePlayer,\n  submarineComputer,\n  patrolBoatPlayer,\n  patrolBoatComputer\n} from './Ships.mjs';\n\nconst Player = (name = 'Computer') => {\n  const board = GameBoard();\n  const createGameBoard = () => board.createBoard();\n  let ships = {\n    carrier: carrierComputer,\n    battleship: battleshipComputer,\n    destroyer: destroyerComputer,\n    submarine: submarineComputer,\n    patrolBoat: patrolBoatComputer\n\n  };\n\n \n  if(name !== 'Computer'){\n    ships = {\n      carrier: carrierPlayer,\n      battleship: battleshipPlayer,\n      destroyer: destroyerPlayer,\n      submarine: submarinePlayer,\n      patrolBoat: patrolBoatPlayer\n    };\n  }\n   \n  \n  return { name, board, ships, createGameBoard };\n};\n\nexport default Player;\n","import {carrierPlayer, carrierComputer,battleshipPlayer,battleshipComputer,destroyerPlayer,destroyerComputer,submarinePlayer,submarineComputer,patrolBoatPlayer,patrolBoatComputer} from './Ships.mjs';\n\nconst GameBoard = () => {\n  const board = [];\n  const size = 10;\n\n  const createBoard = () => {\n    for (let i = 0; i < size; i += 1) {\n      board[i] = [];\n      for (let j = 0; j < size; j += 1) {\n        board[i][j] = 'water';\n      }\n    }\n    return board;\n  };\n  const isCellValid = (x, y) => x >= 0 && x < size && y >= 0 && y < size;\n  const canPlaceShip = (length, row, col, dir) => {\n    const dx = dir === 'horizontal' ? 1 : 0;\n    const dy = dir === 'vertical' ? 1 : 0;\n\n    for (let i = 0; i < length; i += 1) {\n      const x = col + i * dx;\n      const y = row + i * dy;\n\n      if (!isCellValid(x, y)) {\n        return false;\n      }\n\n      for (let adjX = x - 1; adjX <= x + 1; adjX += 1) {\n        for (let adjY = y - 1; adjY <= y + 1; adjY += 1) {\n          if (\n            adjX >= 0 &&\n            adjX < size &&\n            adjY >= 0 &&\n            adjY < size &&\n            board[adjY][adjX] !== 'water'\n          ) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  };\n\n  const placeShip = (ship, row, col, dir) => {\n    const { health } = ship;\n\n    if (!canPlaceShip(health, row, col, dir)) {\n      return false;\n    }\n\n    const dx = dir === 'horizontal' ? 1 : 0;\n    const dy = dir === 'vertical' ? 1 : 0;\n\n    for (let i = 0; i < health; i += 1) {\n      const x = col + i * dx;\n      const y = row + i * dy;\n      board[y][x] = ship;\n    }\n\n    return true;\n  };\n\n  const receiveAttack = (row, col) => {\n    const cell = board[row][col];\n    if (cell !== null && typeof cell.hit === 'function') {\n      return cell.hit(); // If returns true, the ship was sunk\n    }\n\n    board[row][col] = 'M';\n    return 'Missed'; // Otherwise the attack failed and is marked\n  };\n\n  const allShipsSunk = () => {\n    if (\n      (carrierPlayer.hasSunk() &&\n      battleshipPlayer.hasSunk() &&\n      destroyerPlayer.hasSunk() &&\n      submarinePlayer.hasSunk() &&\n      patrolBoatPlayer.hasSunk()) || (carrierComputer.hasSunk &&battleshipComputer.hasSunk() && destroyerComputer.hasSunk() && submarineComputer.hasSunk() && patrolBoatComputer.hasSunk())\n    ) {\n      return true;\n    }\n  \n    \n    return false;\n    \n  };\n\n  return {\n    createBoard,\n    placeShip,\n    receiveAttack,\n    allShipsSunk,\n    get board() {\n      return board;\n    },\n  };\n};\n\nexport default GameBoard;\n","import Game from './Controllers/Game.mjs';\nimport './css/style.css';\nimport footerLogo from './img/ghlogo.png';\n// eslint-disable-next-line no-unused-vars\nimport battleShipBackground from './img/battleship.jpg';\n\nconst ghLogo = document.querySelector('.gh-logo');\n\nghLogo.src = footerLogo;\n\n\nGame();\n","import Player from '../Models/Player.mjs';\n\nimport waterIcon from '../img/water.svg';\nimport shipIcon from '../img/ship.svg';\nimport missedIcon from '../img/shot.svg';\nimport touchedIcon from '../img/impact.svg';\nimport settingsLogo from '../img/settings.svg';\nimport shipWheelLogo from '../img/ship-wheel.svg';\nimport movieRollLogo from '../img/movie-roll.svg';\nimport powerOffLogo from '../img/power.svg';\n\n\n\nconst Game = () => {\n  const playerBoardDom = document.querySelector('#player-board');\n  const computerBoardDom = document.querySelector('#computer-board');\n  const player = Player('Player');\n  const computer = Player();\n  const playerBoard = player.createGameBoard();\n  const computerBoard = computer.createGameBoard();\n  const playerData = [];\n  const computerData = [];\n  const coords = [];\n  let playerTurn = true;\n  let computerTurn = true;\n  const message = document.querySelector('.message');\n  const computerCounter = [\n    ...document.querySelectorAll('.computer-counter>.counter'),\n  ];\n  const playerCounter = [\n    ...document.querySelectorAll('.player-counter>.counter'),\n  ];\n  const playerOneTitle = document.querySelector('.player-title');\n  const computerTitle = document.querySelector('.computer-title');\n  const userDialog = document.querySelector('#user-dialog');\n  const settingsImg = document.querySelector('.settings-logo');\n  const userForm = document.querySelector('#user-form');\n  const playerOneName = document.querySelector('#name-one');\n  const playerTwoName = document.querySelector('#name-two');\n  const shipWheelImg = document.querySelector('.ship-wheel-icon');\n  const movieRollImg = document.querySelector('.movie-roll-icon');\n  const powerOffImg = document.querySelector('.power-off-icon');\n  const placeBtn = document.querySelector('#place-normal-ships');\n  const placeShipDialog = document.querySelector('#place-ship-dialog');\n  const placeForm = document.querySelector('#place-form');\n  const resetUserForm = document.querySelector('#reset');\n  const gameMode = document.querySelector('#game-opt');\n  \n\n  settingsImg.src = settingsLogo;\n  shipWheelImg.src = shipWheelLogo;\n  movieRollImg.src = movieRollLogo;\n  powerOffImg.src = powerOffLogo;\n  userDialog.showModal();\n\n \n  \n  playerTwoName.disabled = true;\n  \n  gameMode.addEventListener('change', () => {\n    if(gameMode.value === 'playerVsComputer'){\n      playerTwoName.disabled = true;\n     \n    }\n    if(gameMode.value === 'playerVsPlayer'){\n      playerTwoName.disabled = false;\n    }\n  });\n\n  resetUserForm.addEventListener('click', () => {\n    playerOneName.value = '';\n    playerTwoName.value = '';\n  });\n  \n  userForm.addEventListener('submit', () => {\n    if(gameMode.value === 'playerVsComputer'){\n      playerOneTitle.textContent = playerOneName.value;\n      computerTitle.textContent = computer.name;\n      message.textContent = `${playerOneName.value} place your ships please`;\n    }\n\n  });\n\n  placeBtn.addEventListener('click', () => {\n    placeShipDialog.showModal();\n  });\n\n  /*  player.board.placeShip(player.ships.carrier, 0, 0, 'horizontal');\n  player.board.placeShip(player.ships.battleship, 4, 9, 'vertical');\n  player.board.placeShip(player.ships.destroyer, 2, 6, 'vertical');\n  player.board.placeShip(player.ships.submarine, 9, 2, 'horizontal');\n  player.board.placeShip(player.ships.patrolBoat, 4, 3, 'vertical'); */\n\n  computer.board.placeShip(computer.ships.carrier, 1, 3, 'horizontal');\n  computer.board.placeShip(computer.ships.battleship, 3, 9, 'vertical');\n  computer.board.placeShip(computer.ships.destroyer, 6, 6, 'vertical');\n  computer.board.placeShip(computer.ships.submarine, 5, 2, 'horizontal');\n  computer.board.placeShip(computer.ships.patrolBoat, 2, 0, 'vertical');\n\n  const resetDom = () => {\n    playerBoardDom.innerHTML = '';\n    computerBoardDom.innerHTML = '';\n    for (let x = 0; x < 10; x += 1) {\n      for (let y = 0; y < 10; y += 1) {\n        playerData.push(playerBoard[x][y]);\n        computerData.push(computerBoard[x][y]);\n        coords.push([x, y]);\n      }\n    }\n\n    for (let i = 0; i < 100; i += 1) {\n      const pCell = document.createElement('button');\n      const cCell = document.createElement('button');\n\n      if (playerData[i] === 'water') {\n        pCell.classList.add('water');\n        pCell.style.backgroundImage = ` url(${waterIcon})`;\n      }\n\n      if (typeof playerData[i] === 'object') {\n        pCell.classList.add('water');\n        pCell.style.backgroundImage = ` url(${shipIcon})`;\n      }\n\n      if (playerData[i] === 'M') {\n        pCell.classList.add('water');\n        pCell.style.backgroundImage = `url(${waterIcon})`;\n      }\n\n      if (computerData[i] === 'water') {\n        cCell.classList.add('water');\n        cCell.style.backgroundImage = `url(${waterIcon})`;\n      }\n\n      if (typeof computerData[i] === 'object') {\n        cCell.classList.add('water');\n        cCell.style.backgroundImage = `url(${waterIcon})`;\n      }\n\n      if (computerData[i] === 'M') {\n        cCell.classList.add('water');\n        cCell.style.backgroundImage = `url(${waterIcon})`;\n      }\n\n      playerBoardDom.append(pCell);\n      computerBoardDom.append(cCell);\n      [...playerBoardDom.children][i].setAttribute('x', coords[i][0]);\n      [...playerBoardDom.children][i].setAttribute('y', coords[i][1]);\n      [...computerBoardDom.children][i].setAttribute('x', coords[i][0]);\n      [...computerBoardDom.children][i].setAttribute('y', coords[i][1]);\n    }\n  };\n\n\n\n  // Function to generate a random number between 0 and 100 (both included)\n  function getRandomNum() {\n    return Math.floor(Math.random() * 100);\n  }\n\n  // Create a set to store unique positions\n  const positionsSet = new Set();\n\n  // Generate random positions until we have 100 unique ones\n  while (positionsSet.size < 100) {\n    const pos = getRandomNum();\n    positionsSet.add(`${pos}`);\n  }\n\n  // Convert the set to a numbers array\n  const positions = Array.from(positionsSet).map((num) => +num);\n\n  const computerAttackHandler = (e) => {\n    e.stopPropagation();\n    if (e.target.closest('.water')) {\n      const x = +e.target.getAttribute('x');\n      const y = +e.target.getAttribute('y');\n      player.board.receiveAttack(x, y);\n      if (playerBoard[x][y] === 'M') {\n        computerTurn = false;\n        e.target.style.backgroundImage = '';\n        e.target.style.backgroundImage = `url(${missedIcon})`;\n        e.target.disabled = true;\n      } else {\n        const shipData = playerBoard[x][y];\n        const shipsArray = Object.values(player.ships);\n        const index = shipsArray.indexOf(shipData);\n\n        if (\n          shipData.name === 'Carrier' ||\n          shipData.name === 'Battleship' ||\n          shipData.name === 'Destroyer' ||\n          shipData.name === 'Submarine' ||\n          shipData.name === 'Patrol Boat'\n        ) {\n          const currentCounter = [...playerCounter[index].children][\n            shipData.health\n          ];\n          currentCounter.style.backgroundColor = 'red';\n        }\n        computerTurn = true;\n        e.target.style.backgroundImage = '';\n        e.target.style.backgroundImage = `url(${touchedIcon})`;\n        e.target.disabled = true;\n        [...playerBoardDom.children][positions.shift()].click();\n      }\n\n      if (computerTurn) {\n        playerBoardDom.addEventListener('click', computerAttackHandler);\n      } else {\n        playerBoardDom.removeEventListener('click', computerAttackHandler);\n        // eslint-disable-next-line no-use-before-define\n        computerBoardDom.addEventListener('click', playerAttackHandler);\n      }\n    }\n    if (player.board.allShipsSunk()) {\n      message.textContent = `${computer.name} Wins!`;\n    }\n  };\n\n  const playerAttackHandler = (e) => {\n    e.stopPropagation();\n    if (e.target.closest('.water')) {\n      const x = +e.target.getAttribute('x');\n      const y = +e.target.getAttribute('y');\n      computer.board.receiveAttack(x, y);\n      if (computerBoard[x][y] === 'M') {\n        playerTurn = false;\n        e.target.style.backgroundImage = '';\n        e.target.style.backgroundImage = ` url(${missedIcon})`;\n        e.target.disabled = true;\n      } else {\n        const shipData = computerBoard[x][y];\n        const shipsArray = Object.values(computer.ships);\n        const index = shipsArray.indexOf(shipData);\n\n        if (\n          shipData.name === 'Carrier' ||\n          shipData.name === 'Battleship' ||\n          shipData.name === 'Destroyer' ||\n          shipData.name === 'Submarine' ||\n          shipData.name === 'Patrol Boat'\n        ) {\n          const currentCounter = [...computerCounter[index].children][\n            shipData.damage - 1\n          ];\n          currentCounter.style.backgroundColor = 'red';\n        }\n        playerTurn = true;\n        e.target.style.backgroundImage = '';\n        e.target.style.backgroundImage = ` url(${touchedIcon})`;\n        e.target.disabled = true;\n        if (computer.board.allShipsSunk()) {\n          message.textContent = `${player.name} Wins!`;\n        }\n        return;\n      }\n\n      if (playerTurn) {\n        computerBoardDom.addEventListener('click', playerAttackHandler);\n      } else {\n        computerBoardDom.removeEventListener('click', playerAttackHandler);\n        playerBoardDom.addEventListener('click', computerAttackHandler);\n        [...playerBoardDom.children][positions.shift()].click();\n      }\n    }\n  };\n\n  placeForm.addEventListener('submit', () => {\n    const carrierX = document.querySelector('#carrier-x');\n    const carrierY = document.querySelector('#carrier-y');\n    const carrierOrientation = document.querySelector('#carrier-orientation');\n    const battleshipX = document.querySelector('#battleship-x');\n    const battleshipY = document.querySelector('#battleship-y');\n    const battleshipOrientation = document.querySelector(\n      '#battleship-orientation'\n    );\n    const destroyerX = document.querySelector('#destroyer-x');\n    const destroyerY = document.querySelector('#destroyer-y');\n    const destroyerOrientation = document.querySelector(\n      '#destroyer-orientation'\n    );\n    const submarineX = document.querySelector('#submarine-x');\n    const submarineY = document.querySelector('#submarine-y');\n    const submarineOrientation = document.querySelector(\n      '#submarine-orientation'\n    );\n    const patrolX = document.querySelector('#patrol-x');\n    const patrolY = document.querySelector('#patrol-y');\n    const patrolOrientation = document.querySelector('#patrol-orientation');\n    \n    if (\n      player.board.placeShip(\n        player.ships.carrier,\n        +carrierX.value - 1,\n        +carrierY.value,\n        carrierOrientation.value\n      ) === true &&\n      player.board.placeShip(\n        player.ships.battleship,\n        +battleshipX.value - 1,\n        +battleshipY.value,\n        battleshipOrientation.value\n      ) === true &&\n      player.board.placeShip(\n        player.ships.destroyer,\n        +destroyerX.value - 1,\n        +destroyerY.value,\n        destroyerOrientation.value\n      ) === true &&\n      player.board.placeShip(\n        player.ships.submarine,\n        +submarineX.value - 1,\n        +submarineY.value,\n        submarineOrientation.value\n      ) === true &&\n      player.board.placeShip(\n        player.ships.patrolBoat,\n        +patrolX.value - 1,\n        +patrolY.value,\n        patrolOrientation.value\n      ) === true\n    ) {\n      player.board.placeShip(\n        player.ships.carrier,\n        +carrierX.value - 1,\n        +carrierY.value,\n        carrierOrientation.value\n      );\n      \n      player.board.placeShip(\n        player.ships.battleship,\n        +battleshipX.value - 1,\n        +battleshipY.value,\n        battleshipOrientation.value\n      );\n      \n      player.board.placeShip(\n        player.ships.destroyer,\n        +destroyerX.value - 1,\n        +destroyerY.value,\n        destroyerOrientation.value\n      );\n      \n      player.board.placeShip(\n        player.ships.submarine,\n        +submarineX.value - 1,\n        +submarineY.value,\n        submarineOrientation.value\n      );\n      \n      player.board.placeShip(\n        player.ships.patrolBoat,\n        +patrolX.value - 1,\n        +patrolY.value,\n        patrolOrientation.value\n      );\n     \n      resetDom();\n      console.table(playerBoard);\n     \n      \n    } else {\n      alert('Bad positions try again !');\n      carrierX.value = '';\n      carrierY.value = '';\n      carrierOrientation.value = 'Horizontal';\n      battleshipX.value = '';\n      battleshipY.value = '';\n      battleshipOrientation.value = '';\n      destroyerX.value = '';\n      destroyerY.value = '';\n      destroyerOrientation.value = '';\n      submarineX.value = '';\n      submarineY.value = '';\n      submarineOrientation.value = '';\n      patrolX.value = '';\n      patrolY.value = '';\n      patrolOrientation.value = '';\n    }\n  });\n  resetDom();\n  computerBoardDom.addEventListener('click', playerAttackHandler);\n};\n\nexport default Game;\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","Ship","name","health","damage","currentHealth","hasSunk","hit","msg","carrierPlayer","battleshipPlayer","destroyerPlayer","submarinePlayer","patrolBoatPlayer","carrierComputer","battleshipComputer","destroyerComputer","submarineComputer","patrolBoatComputer","arguments","undefined","board","GameBoard","size","isCellValid","x","y","createBoard","j","placeShip","ship","row","col","dir","canPlaceShip","dx","dy","adjX","adjY","receiveAttack","cell","allShipsSunk","ships","carrier","battleship","destroyer","submarine","patrolBoat","createGameBoard","querySelector","footerLogo","Game","playerBoardDom","computerBoardDom","player","Player","computer","playerBoard","computerBoard","playerData","computerData","coords","playerTurn","computerTurn","message","computerCounter","querySelectorAll","playerCounter","playerOneTitle","computerTitle","userDialog","settingsImg","userForm","playerOneName","playerTwoName","shipWheelImg","movieRollImg","powerOffImg","placeBtn","placeShipDialog","placeForm","resetUserForm","gameMode","settingsLogo","shipWheelLogo","movieRollLogo","powerOffLogo","showModal","disabled","addEventListener","value","textContent","resetDom","innerHTML","push","pCell","createElement","cCell","classList","add","style","backgroundImage","waterIcon","shipIcon","append","children","setAttribute","positionsSet","Set","pos","Math","floor","random","positions","Array","from","map","num","computerAttackHandler","stopPropagation","target","closest","getAttribute","missedIcon","shipData","index","Object","values","indexOf","backgroundColor","touchedIcon","shift","click","removeEventListener","playerAttackHandler","carrierX","carrierY","carrierOrientation","battleshipX","battleshipY","battleshipOrientation","destroyerX","destroyerY","destroyerOrientation","submarineX","submarineY","submarineOrientation","patrolX","patrolY","patrolOrientation","console","table","alert"],"sourceRoot":""}