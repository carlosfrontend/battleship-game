{"version":3,"file":"battleshipa76cb1dee3372943113d.bundle.js","mappings":"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","sources":["webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/runtime/global","webpack://battleship/webpack/runtime/publicPath","webpack://battleship/./src/Models/Ship.mjs","webpack://battleship/./src/Models/Ships.mjs","webpack://battleship/./src/Models/Player.mjs","webpack://battleship/./src/Models/GameBoard.mjs","webpack://battleship/./src/index.js","webpack://battleship/./src/Controllers/Game.mjs"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","const Ship = (name, health) => {\n  let damage = 0;\n  let currentHealth = health;\n\n  const hasSunk = () => damage === health;\n\n  const hit = () => {\n    \n    let msg = '';\n\n    if (!hasSunk()) {\n      damage += 1;\n      currentHealth -= 1;\n      return hasSunk();\n    }\n\n    msg += 'The ship you are trying to hit has already sank.';\n\n    return msg;\n  };\n\n  return {\n    name,\n    get health() {\n      return currentHealth;\n    },\n    get damage() {\n      return damage;\n    },\n    hasSunk,\n    hit,\n  };\n};\n\nexport default Ship;\n","import Ship from './Ship.mjs';\n\nconst carrierPlayer = Ship('Carrier', 5);\nconst battleshipPlayer = Ship('Battleship', 4);\nconst destroyerPlayer = Ship('Destroyer', 3);\nconst submarinePlayer = Ship('Submarine', 3);\nconst patrolBoatPlayer = Ship('Patrol Boat', 2);\n\nconst carrierComputer = Ship('Carrier', 5);\nconst battleshipComputer = Ship('Battleship', 4);\nconst destroyerComputer = Ship('Destroyer', 3);\nconst submarineComputer = Ship('Submarine', 3);\nconst patrolBoatComputer = Ship('Patrol Boat', 2);\n\nexport {carrierPlayer, carrierComputer,battleshipPlayer,battleshipComputer,destroyerPlayer,destroyerComputer,submarinePlayer,submarineComputer,patrolBoatPlayer,patrolBoatComputer};","import GameBoard from './GameBoard.mjs';\nimport {\n  carrierPlayer,\n  carrierComputer,\n  battleshipPlayer,\n  battleshipComputer,\n  destroyerPlayer,\n  destroyerComputer,\n  submarinePlayer,\n  submarineComputer,\n  patrolBoatPlayer,\n  patrolBoatComputer\n} from './Ships.mjs';\n\nconst Player = (name = 'Computer') => {\n  const board = GameBoard();\n  const createGameBoard = () => board.createBoard();\n  let ships = {\n    carrier: carrierComputer,\n    battleship: battleshipComputer,\n    destroyer: destroyerComputer,\n    submarine: submarineComputer,\n    patrolBoat: patrolBoatComputer\n\n  };\n\n \n  if(name !== 'Computer'){\n    ships = {\n      carrier: carrierPlayer,\n      battleship: battleshipPlayer,\n      destroyer: destroyerPlayer,\n      submarine: submarinePlayer,\n      patrolBoat: patrolBoatPlayer\n    };\n  }\n   \n  \n  return { name, board, ships, createGameBoard };\n};\n\nexport default Player;\n","import {carrierPlayer, carrierComputer,battleshipPlayer,battleshipComputer,destroyerPlayer,destroyerComputer,submarinePlayer,submarineComputer,patrolBoatPlayer,patrolBoatComputer} from './Ships.mjs';\n\nconst GameBoard = () => {\n  const board = [];\n  const size = 10;\n\n  const createBoard = () => {\n    for (let i = 0; i < size; i += 1) {\n      board[i] = [];\n      for (let j = 0; j < size; j += 1) {\n        board[i][j] = 'water';\n      }\n    }\n    return board;\n  };\n  const isCellValid = (x, y) => x >= 0 && x < size && y >= 0 && y < size;\n  const canPlaceShip = (length, row, col, dir) => {\n    const dx = dir === 'horizontal' ? 1 : 0;\n    const dy = dir === 'vertical' ? 1 : 0;\n\n    for (let i = 0; i < length; i += 1) {\n      const x = col + i * dx;\n      const y = row + i * dy;\n\n      if (!isCellValid(x, y)) {\n        return false;\n      }\n\n      for (let adjX = x - 1; adjX <= x + 1; adjX += 1) {\n        for (let adjY = y - 1; adjY <= y + 1; adjY += 1) {\n          if (\n            adjX >= 0 &&\n            adjX < size &&\n            adjY >= 0 &&\n            adjY < size &&\n            board[adjY][adjX] !== 'water'\n          ) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  };\n\n  const placeShip = (ship, row, col, dir) => {\n    const { health } = ship;\n\n    if (!canPlaceShip(health, row, col, dir)) {\n      return false;\n    }\n\n    const dx = dir === 'horizontal' ? 1 : 0;\n    const dy = dir === 'vertical' ? 1 : 0;\n\n    for (let i = 0; i < health; i += 1) {\n      const x = col + i * dx;\n      const y = row + i * dy;\n      board[y][x] = ship;\n    }\n\n    return true;\n  };\n\n  const receiveAttack = (row, col) => {\n    const cell = board[row][col];\n    if (cell !== null && typeof cell.hit === 'function') {\n      return cell.hit(); // If returns true, the ship was sunk\n    }\n\n    board[row][col] = 'M';\n    return 'Missed'; // Otherwise the attack failed and is marked\n  };\n\n  const allShipsSunk = () => {\n    if (\n      (carrierPlayer.hasSunk() &&\n      battleshipPlayer.hasSunk() &&\n      destroyerPlayer.hasSunk() &&\n      submarinePlayer.hasSunk() &&\n      patrolBoatPlayer.hasSunk()) || (carrierComputer.hasSunk &&battleshipComputer.hasSunk() && destroyerComputer.hasSunk() && submarineComputer.hasSunk() && patrolBoatComputer.hasSunk())\n    ) {\n      return true;\n    }\n  \n    \n    return false;\n    \n  };\n\n  return {\n    createBoard,\n    placeShip,\n    receiveAttack,\n    allShipsSunk,\n    canPlaceShip,\n    get board() {\n      return board;\n    },\n  };\n};\n\nexport default GameBoard;\n","import Game from './Controllers/Game.mjs';\nimport './css/style.css';\nimport footerLogo from './img/ghlogo.png';\n\nconst ghLogo = document.querySelector('.gh-logo');\n\nghLogo.src = footerLogo;\n\nGame();","import Player from '../Models/Player.mjs';\n\nimport waterIcon from '../img/water.svg';\nimport shipIcon from '../img/ship.svg';\nimport missedIcon from '../img/shot.svg';\nimport touchedIcon from '../img/impact.svg';\nimport settingsLogo from '../img/settings.svg';\nimport shipWheelLogo from '../img/ship-wheel.svg';\nimport movieRollLogo from '../img/movie-roll.svg';\nimport powerOffLogo from '../img/power.svg';\n\nconst Game = () => {\n  const playerBoardDom = document.querySelector('#player-board');\n  const computerBoardDom = document.querySelector('#computer-board');\n  const player = Player('Player');\n  const computer = Player();\n  const playerBoard = player.createGameBoard();\n  const computerBoard = computer.createGameBoard();\n  let playerData = [];\n  const computerData = [];\n  let coords = [];\n  let playerTurn = true;\n  let computerTurn = true;\n\n  const message = document.querySelector('.message');\n  const computerCounter = [\n    ...document.querySelectorAll('.computer-counter>.counter'),\n  ];\n  const playerCounter = [\n    ...document.querySelectorAll('.player-counter>.counter'),\n  ];\n  const playerOneTitle = document.querySelector('.player-title');\n  const computerTitle = document.querySelector('.computer-title');\n  const userDialog = document.querySelector('#user-dialog');\n  const settingsImg = document.querySelector('.settings-logo');\n  const userForm = document.querySelector('#user-form');\n  const playerOneName = document.querySelector('#name-one');\n  // const playerTwoName = document.querySelector('#name-two');\n  const shipWheelImg = document.querySelector('.ship-wheel-icon');\n  const movieRollImg = document.querySelector('.movie-roll-icon');\n  const powerOffImg = document.querySelector('.power-off-icon');\n  const placeBtn = document.querySelector('#place-normal-ships');\n  const placeShipDialog = document.querySelector('#place-ship-dialog');\n  const placeForm = document.querySelector('#place-form');\n  const resetUserForm = document.querySelector('#reset');\n  const gameMode = document.querySelector('#game-opt');\n  const cancelBtn = document.querySelector('#cancel');\n  const randomBtn = document.querySelector('#place-random-ships');\n  const resetGameBtn = document.querySelector('#reset-game');\n  const gameControllers = document.querySelectorAll('.game-controllers>button');\n\n  settingsImg.src = settingsLogo;\n  shipWheelImg.src = shipWheelLogo;\n  movieRollImg.src = movieRollLogo;\n  powerOffImg.src = powerOffLogo;\n\n  document.addEventListener('DOMContentLoaded', () => {\n    const onlyDesktopDiv = document.createElement('div');\n    onlyDesktopDiv.style.display = 'flex';\n    onlyDesktopDiv.style.flexDirection = 'row';\n    onlyDesktopDiv.style.justifyContent = 'center';\n    onlyDesktopDiv.style.height = '100vh';\n    onlyDesktopDiv.style.width = '100%';\n    onlyDesktopDiv.style.position = 'absolute';\n    onlyDesktopDiv.style.background = 'white';\n    onlyDesktopDiv.style.top = '0';\n    onlyDesktopDiv.style.alignItems = 'center';\n    onlyDesktopDiv.setAttribute('id', 'onlyDesktop');\n    if (window.innerWidth < 1024) {\n      document.body.append(onlyDesktopDiv);\n      onlyDesktopDiv.textContent = 'You can play on your laptop or PC.';\n    }else{\n      userDialog.showModal();\n\n    }\n  \n  });\n  \n\n  /*   playerTwoName.disabled = true;\n\n  gameMode.addEventListener('change', () => {\n    if (gameMode.value === 'playerVsComputer') {\n      playerTwoName.disabled = true;\n    }\n    if (gameMode.value === 'playerVsPlayer') {\n      playerTwoName.disabled = false;\n    }\n  }); */\n\n  resetUserForm.addEventListener('click', () => {\n    playerOneName.value = '';\n    // playerTwoName.value = '';\n  });\n\n  userForm.addEventListener('submit', () => {\n    if (gameMode.value === 'playerVsComputer') {\n      for(let i = 0; i < gameControllers.length; i+=1){\n        gameControllers[i].style.opacity = '1';\n        gameControllers[i].style.transform = 'translateY(0)';\n      }\n      playerOneTitle.textContent = playerOneName.value;\n      player.name = playerOneName.value;\n      computerTitle.textContent = computer.name;\n      message.textContent = `${playerOneName.value} place your ships please`;\n      message.style.fontSize = '1.8rem';\n    }\n  });\n\n  placeBtn.addEventListener('click', () => {\n    placeShipDialog.showModal();\n  });\n\n  const placeRandomShips = (entity) => {\n    const ships = Object.values(entity.ships);\n    let xRandomArray = [];\n    let yRandomArray = [];\n    const orientations = ['horizontal', 'vertical'];\n    let orientationsArray = [];\n\n    for (let i = 0; i < ships.length; i += 1) {\n      xRandomArray.push(Math.floor(Math.random() * 10));\n      yRandomArray.push(Math.floor(Math.random() * 10));\n      orientationsArray.push(orientations[Math.floor(Math.random() * 2)]);\n    }\n\n    ships.forEach((ship, index) => {\n      while (\n        entity.board.canPlaceShip(\n          ship.health,\n          xRandomArray[index],\n          yRandomArray[index],\n          orientationsArray[index]\n        ) !== true\n      ) {\n        xRandomArray = [];\n        yRandomArray = [];\n        orientationsArray = [];\n        xRandomArray[index] = Math.floor(Math.random() * 10);\n        yRandomArray[index] = Math.floor(Math.random() * 10);\n        orientationsArray[index] = orientations[Math.floor(Math.random() * 2)];\n      }\n      entity.board.placeShip(\n        ship,\n        xRandomArray[index],\n        yRandomArray[index],\n        orientationsArray[index]\n      );\n    });\n  };\n\n  const resetDom = () => {\n    playerBoardDom.innerHTML = '';\n    computerBoardDom.innerHTML = '';\n    for (let x = 0; x < 10; x += 1) {\n      for (let y = 0; y < 10; y += 1) {\n        playerData.push(playerBoard[x][y]);\n        computerData.push(computerBoard[x][y]);\n        coords.push([x, y]);\n      }\n    }\n\n    for (let i = 0; i < 100; i += 1) {\n      const pCell = document.createElement('button');\n      const cCell = document.createElement('button');\n\n      if (playerData[i] === 'water') {\n        pCell.classList.add('water');\n        pCell.style.backgroundImage = ` url(${waterIcon})`;\n      }\n\n      if (typeof playerData[i] === 'object') {\n        pCell.classList.add('water');\n        pCell.style.backgroundImage = ` url(${shipIcon})`;\n      }\n\n      if (playerData[i] === 'M') {\n        pCell.classList.add('water');\n        pCell.style.backgroundImage = `url(${waterIcon})`;\n      }\n\n      if (computerData[i] === 'water') {\n        cCell.classList.add('water');\n        cCell.style.backgroundImage = `url(${waterIcon})`;\n      }\n\n      if (typeof computerData[i] === 'object') {\n        cCell.classList.add('water');\n        cCell.style.backgroundImage = `url(${waterIcon})`;\n      }\n\n      if (computerData[i] === 'M') {\n        cCell.classList.add('water');\n        cCell.style.backgroundImage = `url(${waterIcon})`;\n      }\n\n      playerBoardDom.append(pCell);\n      computerBoardDom.append(cCell);\n      [...playerBoardDom.children][i].setAttribute('x', coords[i][0]);\n      [...playerBoardDom.children][i].setAttribute('y', coords[i][1]);\n      [...computerBoardDom.children][i].setAttribute('x', coords[i][0]);\n      [...computerBoardDom.children][i].setAttribute('y', coords[i][1]);\n    }\n  };\n  // Function to generate a random number between 0 and 100 (both included)\n  function getRandomNum() {\n    return Math.floor(Math.random() * 100);\n  }\n\n  // Create a set to store unique positions\n  const positionsSet = new Set();\n\n  // Generate random positions until we have 100 unique ones\n  while (positionsSet.size < 100) {\n    const pos = getRandomNum();\n    positionsSet.add(`${pos}`);\n  }\n\n  // Convert the set to a numbers array\n  const positions = Array.from(positionsSet).map((num) => +num);\n\n  const computerAttackHandler = (e) => {\n    e.stopPropagation();\n    message.textContent = `${computer.name}'s turn!`;\n    if (e.target.closest('.water')) {\n      const x = +e.target.getAttribute('x');\n      const y = +e.target.getAttribute('y');\n      player.board.receiveAttack(x, y);\n      if (playerBoard[x][y] === 'M') {\n        message.textContent = `${player.name}'s turn!`;\n        computerTurn = false;\n        e.target.style.backgroundImage = '';\n        e.target.style.backgroundImage = `url(${missedIcon})`;\n        e.target.disabled = true;\n      } else {\n        const shipData = playerBoard[x][y];\n        const shipsArray = Object.values(player.ships);\n        const index = shipsArray.indexOf(shipData);\n\n        if (\n          (shipData.name === 'Carrier' || shipData.name === 'Battleship') ||\n          shipData.name === 'Destroyer' ||\n          shipData.name === 'Submarine' ||\n          shipData.name === 'Patrol Boat'\n        ) {\n          const currentCounter = [...playerCounter[index].children][\n            shipData.health\n          ];\n          currentCounter.style.backgroundColor = 'red';\n        }\n        computerTurn = true;\n        e.target.style.backgroundImage = '';\n        e.target.style.backgroundImage = `url(${touchedIcon})`;\n        e.target.disabled = true;\n        setTimeout(() => {\n          [...playerBoardDom.children][positions.shift()].click();\n        }, 1000);\n      }\n\n      if (computerTurn) {\n        playerBoardDom.addEventListener('click', computerAttackHandler);\n      } else {\n        playerBoardDom.removeEventListener('click', computerAttackHandler);\n        // eslint-disable-next-line no-use-before-define\n        computerBoardDom.addEventListener('click', playerAttackHandler);\n      }\n    }\n    if (player.board.allShipsSunk()) {\n      message.textContent = `${computer.name} Wins!`;\n      // eslint-disable-next-line no-use-before-define\n      computerBoardDom.removeEventListener('click', playerAttackHandler);\n      playerBoardDom.removeEventListener('click',computerAttackHandler);\n    }\n  };\n\n  const playerAttackHandler = (e) => {\n    e.stopPropagation();\n    randomBtn.disabled = true;\n    if (e.target.closest('.water')) {\n      const x = +e.target.getAttribute('x');\n      const y = +e.target.getAttribute('y');\n      computer.board.receiveAttack(x, y);\n      if (computerBoard[x][y] === 'M') {\n        message.textContent = `${computer.name}'s turn!`;\n        playerTurn = false;\n        e.target.style.backgroundImage = '';\n        e.target.style.backgroundImage = ` url(${missedIcon})`;\n        e.target.disabled = true;\n      } else {\n        const shipData = computerBoard[x][y];\n        const shipsArray = Object.values(computer.ships);\n        const index = shipsArray.indexOf(shipData);\n\n        if (\n          shipData.name === 'Carrier' ||\n          shipData.name === 'Battleship' ||\n          shipData.name === 'Destroyer' ||\n          shipData.name === 'Submarine' ||\n          shipData.name === 'Patrol Boat'\n        ) {\n          const currentCounter = [...computerCounter[index].children][\n            shipData.damage - 1\n          ];\n          currentCounter.style.backgroundColor = 'red';\n        }\n        playerTurn = true;\n        e.target.style.backgroundImage = '';\n        e.target.style.backgroundImage = ` url(${touchedIcon})`;\n        e.target.disabled = true;\n        if (computer.board.allShipsSunk()) {\n          message.textContent = `${player.name} Wins!`;\n          playerBoardDom.removeEventListener('click',computerAttackHandler);\n          computerBoardDom.removeEventListener('click', playerAttackHandler);\n        }\n        return;\n      }\n\n      if (playerTurn) {\n        computerBoardDom.addEventListener('click', playerAttackHandler);\n      } else {\n        computerBoardDom.removeEventListener('click', playerAttackHandler);\n        playerBoardDom.addEventListener('click', computerAttackHandler);\n        setTimeout(() => {\n          [...playerBoardDom.children][positions.shift()].click();\n        }, 1000);\n      }\n    }\n  };\n\n  const updatePlayerBoardDom = () => {\n    // console.log('Updating player board!');\n    playerData = [];\n    playerBoardDom.innerHTML = '';\n    coords = [];\n    for (let x = 0; x < 10; x += 1) {\n      for (let y = 0; y < 10; y += 1) {\n        playerData.push(playerBoard[x][y]);\n        coords.push([x, y]);\n      }\n    }\n    for (let i = 0; i < 100; i += 1) {\n      const pCell = document.createElement('button');\n\n      if (playerData[i] === 'water') {\n        pCell.classList.add('water');\n        pCell.style.backgroundImage = ` url(${waterIcon})`;\n      }\n\n      if (typeof playerData[i] === 'object') {\n        pCell.classList.add('water');\n        pCell.style.backgroundImage = ` url(${shipIcon})`;\n      }\n\n      if (playerData[i] === 'M') {\n        pCell.classList.add('water');\n        pCell.style.backgroundImage = `url(${waterIcon})`;\n      }\n      playerBoardDom.appendChild(pCell);\n      [...playerBoardDom.children][i].setAttribute('x', coords[i][0]);\n      [...playerBoardDom.children][i].setAttribute('y', coords[i][1]);\n    }\n  };\n\n  /*   const updateComputerBoardDom = () => {\n    console.log('Updating computer board!');\n    computerData = [];\n    coords = [];\n    computerBoardDom.innerHTML = '';\n    for (let x = 0; x < 10; x += 1) {\n      for (let y = 0; y < 10; y += 1) {\n        computerData.push(computerBoard[x][y]);\n        coords.push([x, y]);\n      }\n    }\n    for (let i = 0; i < 100; i += 1) {\n      const cCell = document.createElement('button');\n\n      if (computerData[i] === 'water') {\n        cCell.classList.add('water');\n        cCell.style.backgroundImage = ` url(${waterIcon})`;\n      }\n\n      if (typeof computerData[i] === 'object') {\n        cCell.classList.add('water');\n        cCell.style.backgroundImage = ` url(${shipIcon})`;\n      }\n\n      if (computerData[i] === 'M') {\n        cCell.classList.add('water');\n        cCell.style.backgroundImage = `url(${waterIcon})`;\n      }\n      computerBoardDom.appendChild(cCell);\n      [...computerBoardDom.children][i].setAttribute('x', coords[i][0]);\n      [...computerBoardDom.children][i].setAttribute('y', coords[i][1]);\n    }\n  }; */\n\n  placeRandomShips(computer);\n  // console.table(computerBoard);\n  resetDom();\n\n  randomBtn.addEventListener('click', () => {\n    placeBtn.disabled = true;\n    for(let i = 0; i < 10; i+=1){\n      for(let j = 0; j < 10; j+=1){\n        playerBoard[i][j] = 'water';\n      }\n    }\n    placeRandomShips(player);\n    updatePlayerBoardDom();\n    // console.table(playerBoard);\n    message.textContent = `${player.name}'s turn!`;\n    computerBoardDom.addEventListener('click', playerAttackHandler);\n    \n  });\n\n  // Place player ships manually\n  placeForm.addEventListener('submit', (e) => {\n    const carrierX = document.querySelector('#carrier-x');\n    const carrierY = document.querySelector('#carrier-y');\n    const carrierOrientation = document.querySelector('#carrier-orientation');\n    const battleshipX = document.querySelector('#battleship-x');\n    const battleshipY = document.querySelector('#battleship-y');\n    const battleshipOrientation = document.querySelector(\n      '#battleship-orientation'\n    );\n    const destroyerX = document.querySelector('#destroyer-x');\n    const destroyerY = document.querySelector('#destroyer-y');\n    const destroyerOrientation = document.querySelector(\n      '#destroyer-orientation'\n    );\n    const submarineX = document.querySelector('#submarine-x');\n    const submarineY = document.querySelector('#submarine-y');\n    const submarineOrientation = document.querySelector(\n      '#submarine-orientation'\n    );\n    const patrolX = document.querySelector('#patrol-x');\n    const patrolY = document.querySelector('#patrol-y');\n    const patrolOrientation = document.querySelector('#patrol-orientation');\n\n    if (\n      player.board.placeShip(\n        player.ships.carrier,\n        +carrierX.value - 1,\n        +carrierY.value,\n        carrierOrientation.value\n      ) === true &&\n      player.board.placeShip(\n        player.ships.battleship,\n        +battleshipX.value - 1,\n        +battleshipY.value,\n        battleshipOrientation.value\n      ) === true &&\n      player.board.placeShip(\n        player.ships.destroyer,\n        +destroyerX.value - 1,\n        +destroyerY.value,\n        destroyerOrientation.value\n      ) === true &&\n      player.board.placeShip(\n        player.ships.submarine,\n        +submarineX.value - 1,\n        +submarineY.value,\n        submarineOrientation.value\n      ) === true &&\n      player.board.placeShip(\n        player.ships.patrolBoat,\n        +patrolX.value - 1,\n        +patrolY.value,\n        patrolOrientation.value\n      ) === true\n    ) {\n      player.board.placeShip(\n        player.ships.carrier,\n        +carrierX.value - 1,\n        +carrierY.value,\n        carrierOrientation.value\n      );\n\n      player.board.placeShip(\n        player.ships.battleship,\n        +battleshipX.value - 1,\n        +battleshipY.value,\n        battleshipOrientation.value\n      );\n\n      player.board.placeShip(\n        player.ships.destroyer,\n        +destroyerX.value - 1,\n        +destroyerY.value,\n        destroyerOrientation.value\n      );\n\n      player.board.placeShip(\n        player.ships.submarine,\n        +submarineX.value - 1,\n        +submarineY.value,\n        submarineOrientation.value\n      );\n\n      player.board.placeShip(\n        player.ships.patrolBoat,\n        +patrolX.value - 1,\n        +patrolY.value,\n        patrolOrientation.value\n      );\n      placeBtn.disabled = true;\n      message.textContent = `${player.name}'s turn!`;\n      updatePlayerBoardDom();\n      randomBtn.disabled = true;\n      // console.table(playerBoard);\n      computerBoardDom.addEventListener('click', playerAttackHandler);\n    } else {\n      e.preventDefault();\n      alert('Bad positions try again !');\n      carrierX.value = '';\n      carrierY.value = '';\n      carrierOrientation.value = '';\n      battleshipX.value = '';\n      battleshipY.value = '';\n      battleshipOrientation.value = '';\n      destroyerX.value = '';\n      destroyerY.value = '';\n      destroyerOrientation.value = '';\n      submarineX.value = '';\n      submarineY.value = '';\n      submarineOrientation.value = '';\n      patrolX.value = '';\n      patrolY.value = '';\n      patrolOrientation.value = '';\n      for (let i = 0; i < 10; i += 1) {\n        for (let j = 0; j < 10; j += 1) {\n          playerBoard[i][j] = 'water';\n        }\n      }\n      // console.table(playerBoard);\n    }\n  });\n  cancelBtn.addEventListener('click', () => {\n    placeShipDialog.close();\n  });\n\n  resetGameBtn.addEventListener('click', () => {\n    window.location.reload();\n  });\n};\n\nexport default Game;\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","Ship","name","health","damage","currentHealth","hasSunk","hit","msg","carrierPlayer","battleshipPlayer","destroyerPlayer","submarinePlayer","patrolBoatPlayer","carrierComputer","battleshipComputer","destroyerComputer","submarineComputer","patrolBoatComputer","arguments","undefined","board","GameBoard","size","isCellValid","x","y","canPlaceShip","row","col","dir","dx","dy","adjX","adjY","createBoard","j","placeShip","ship","receiveAttack","cell","allShipsSunk","ships","carrier","battleship","destroyer","submarine","patrolBoat","createGameBoard","querySelector","footerLogo","Game","playerBoardDom","computerBoardDom","player","Player","computer","playerBoard","computerBoard","playerData","computerData","coords","playerTurn","computerTurn","message","computerCounter","querySelectorAll","playerCounter","playerOneTitle","computerTitle","userDialog","settingsImg","userForm","playerOneName","shipWheelImg","movieRollImg","powerOffImg","placeBtn","placeShipDialog","placeForm","resetUserForm","gameMode","cancelBtn","randomBtn","resetGameBtn","gameControllers","settingsLogo","shipWheelLogo","movieRollLogo","powerOffLogo","addEventListener","onlyDesktopDiv","createElement","style","display","flexDirection","justifyContent","height","width","position","background","top","alignItems","setAttribute","innerWidth","body","append","textContent","showModal","value","opacity","transform","fontSize","placeRandomShips","entity","Object","values","xRandomArray","yRandomArray","orientations","orientationsArray","push","Math","floor","random","forEach","index","positionsSet","Set","pos","add","positions","Array","from","map","num","computerAttackHandler","stopPropagation","target","closest","getAttribute","backgroundImage","missedIcon","disabled","shipData","indexOf","children","backgroundColor","touchedIcon","setTimeout","shift","click","removeEventListener","playerAttackHandler","updatePlayerBoardDom","innerHTML","pCell","classList","waterIcon","shipIcon","appendChild","resetDom","cCell","carrierX","carrierY","carrierOrientation","battleshipX","battleshipY","battleshipOrientation","destroyerX","destroyerY","destroyerOrientation","submarineX","submarineY","submarineOrientation","patrolX","patrolY","patrolOrientation","preventDefault","alert","close","reload"],"sourceRoot":""}